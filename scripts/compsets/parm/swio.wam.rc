#############################################
####  SWIO Run-Time Configuration File  #####
#############################################
#
#  Imported fields
#
import_fields::
    height
    temp_neutral
    eastward_wind_neutral
    northward_wind_neutral
    upward_wind_neutral
    O_Density
    O2_Density
    N2_Density
    thermosphere_mass_density
    thermosphere_mean_molecular_mass
::
#
#  Output fields
#
#  List import fields to be written to file and set corresponding
#  output variable name (optional) using the following syntax:
#
#  <import_field_name>    [<output_variable_name>]
output_fields::
    height                              wam_height_levels
    temp_neutral
    eastward_wind_neutral
    northward_wind_neutral
    upward_wind_neutral
    O_Density
    O2_Density
    N2_Density
    thermosphere_mass_density
    thermosphere_mean_molecular_mass
::
#
#  Imported masking field
#
import_mask_field: temp_neutral 0.0 -99999.
#
#  Computed fields
#
#  Use SWIO internal calculator to compute additional
#  output fields from input ones, according to the syntax
#  below:
#
#  <function_name> <input_field1> ... <input_fieldN> [<input_parm1> ... <input_parmL>] <output_field1> <output_units1> ... <output_fieldM> <output_unitsM> <scaling_factor>
#
#  Available functions are:
#  - column_integrate
#  - column_max_point
#  - column_max_region
#  - column_interpolate
#
#  Note that <scaling_factor> is optional as it may or may not be used depending on the function
#
compute_fields::
    column_interpolate  thermosphere_mass_density    height    400000.    iss_mass_density    "kg m-3"
    column_o_n2_ratio   O_Density    N2_Density    temp_neutral    height    2.e+21    o_n2_ratio    "1"
::
#
# Output create mode
#
# Supported modes are: clobber (default), preserve-links
# - clobber       : overwrite existing files (default)
# - preserve-links: do not overwrite linked output targets
#
output_create_mode: preserve-links
#
# Output file format.
#
# Choose from:
# - hdf5
# - pnetcdf or parallel-netcdf
#
output_format: pnetcdf
#
# Output datatype
#
# Supported datatypes for output variables are:
# - integer: write variables as integers
# - float  : write variables as real, single precision
# - double : write variables as real, double precision
# - native : write variables using their original type
#
output_datatype: float
#
# Output file prefix.
#
# Output file names are created as:
#   <prefix>.<datetime>.<suffix>
# where:
#   <prefix>   : is the string provided via
#                output_file_prefix keyword
#   <datetime> : inported field timestamp,
#                formatted as: YYYYMMDD_hhmmss
#   <suffix>   : determined from output format:
#                'hd5' for hdf5, 'nc' for pnetcdf
#
output_file_prefix: gsm
#
# Output metadata.
#
# Metadata can be added to output files as global
# string attributes created from <key> <value>
# row entries in the table below. If <value> is
# missing, it will be set to "N/A".
#
output_metadata::
  init_date     $SWIO_IDATE
  start_date    $SWIO_SDATE
  end_date      $SWIO_EDATE
  fcst_date     __swio_field_timestamp__
  run_type      $CDUMP
::
#
# Output grid type.
#
# Supported types are:
# - latlon: 2D/3D regular lat/lon spherical grid
# - none  : native (imported) grid/mesh
#
output_grid_type: latlon
#
# The following keywords are read only if grid
# type is 'latlon'
#
# Output grid size.
#
# Provides the lat/lon grid resolution as
#   #longitudes #latitudes [#levels]
#
# If #levels is missing, a 2D lat/lon grid will be built
#
# If #levels > 0, the minimum and maximum value of the
# vertical coordinate (km) will be read via the
# 'output_grid_level_range' keyword below.
#
# If #levels = 0, the grid's vertical levels are read
# from the 'output_grid_level_values' table (km)
#
# If #levels < 0, ungridded #nlevels will be added
#
#output_grid_size: 90 91 -150
output_grid_size: 180 91 -150
#
# Minimin and maximum values of vertical coordinate (km)
# Used if #levels > 0
#
output_grid_level_range: 90. 1000.
#
# List of vertical levels (km)
# Used if #levels = 0
#
output_grid_level_values::
   90.
  150.
  300.
  400.
  500.
  600.
  700.
  800.
::
#
# If true, this flag transforms the vertical coordinate (v),
# assumed in km, to heights (h) relative to the average
# Earth's radius (R=6,371.2 km), accordina to the formula:
#   h = 1 + v/R
#
output_grid_level_relative: false
